<!-- EL(Experssion Language)
	- 값을 간편하고 간결하게 출력할 수 있도록 해 주는 표현언어다!
	- 페이지가독성 좋아진다~
	- ${출력값들을 안에 집어 넣는다!}
	- 값을 찾을 때 작은 범위->큰범위로 찾는다.
	  scope란? 변수 사용가능 범위
	  
	- 출력할 때 사용을 하는 거기 때문에 jstl과 연동
	
	${requestScope.키값}
	${paraml.네임값}
	${영역값.key나 구별가능한변수명}
	   -->
	   
	${2+5}
	${2-5}
	${2*5}
	${2/5}
	${2 mod 5}
	
	<!-- 혹시 산술연산하다 null 내부적으로 long타입 0으로 변경해서 연산함 
		자바는 문자열로 인식해 연결, el은 문자열->숫자열로 바꿔 연산!
		-->
	${null+2}
	${"1"+2}
	
	<!-- 비교연산자를 가능하지만 문자열연산에 ==,!=,and,or,not가능 
		문자열비교시 자동으로 compareTo()메서드가 동작함-->
	${10=10 && 9==9}
	${10==10 || 9==8}
	${!(10==10)}
	<br><br>
	${10 eq 10}<!-- 같니? ep -->
	${"이서희" eq "이서희"}
	<br>
	${10 ne 10}<!-- 다르니? ne -->
	${"이서희" ne "이지희"}
	
	${10<10}<!-- lt -->
	${10 lt 10}<!-- lt -->
	
	${10>10}<!-- gt -->
	${10 gt 10}<!-- gt -->
	
	${10<=10}<!-- le -->
	${10 le 10}<!-- le -->
	
	${10>=10}<!-- ge -->
	${10 ge 10}<!-- ge -->
	
	
	
	
	
	
	<!-- value="출력값" 
	value값에 null이면 기본값이 출력되고 
	기본값이 없으면 빈 문자열 출력된다-->
	<c:out value="hello world"></c:out><br>
	<c:out value="${null}">jstl</c:out><br>
	<c:out value="hello">world</c:out><br>
	<c:out value="${null}"/><br>
		 <c:set var="변수명" value="값" scope="기본값"></c:set>
